
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;

// This is class that describes you smart contract.
contract Tasks {

    // Структура задачи
	 struct  Task {
        string name; //Имя задачи   
        uint32  timestamp; //Время создания задачи
        bool indicator; // Флаг выполненеия
     }
     // Маппинг задачи
         mapping(int8=>Task) taskmap;
        Task[] public mapvalues;

	constructor() public {
		// check that contract's public key is set
		require(tvm.pubkey() != 0, 101);
		// Check that message has signature (msg.pubkey() is not zero) and message is signed with the owner's private key
		require(msg.pubkey() == tvm.pubkey(), 102);
		tvm.accept();
	}

	// Modifier that allows to accept some external messages
	modifier checkOwnerAndAccept {
		// Check that message was signed with contracts key.
		require(msg.pubkey() == tvm.pubkey(), 102);
		tvm.accept();
		_;
	}

	///Добавить задачу
	function addtask(string task) public checkOwnerAndAccept {
        Task newtask = Task(task, now, false);
        mapvalues.push(newtask);
       taskmap[(int8)(mapvalues.length)] = newtask;
	}
    // Количество задач
	function numberoftask() public checkOwnerAndAccept returns (uint) {
         
        uint counttasks = 0;
        for (int8 index = 0; index < (int8)(mapvalues.length); index++) {
            if(taskmap[index].indicator == false){
            counttasks++;
            }   
        }
        return counttasks;
	}

    // Список задач
	function listoftasks() public checkOwnerAndAccept returns (mapping(int8=>Task)) {
        return taskmap;
	}

    //описание задачи по ключу
	function descrptionoftasks(int8 index) public checkOwnerAndAccept returns (Task) {
          return taskmap[index];
	}
    //удалить задачу по ключу
    	function deletetask(int8 index) public checkOwnerAndAccept {
         taskmap[index].indicator = true;   
        delete taskmap[index];

	}
    //Отметить задачу выполненной по ключу
    	function changeindicatoroftask(int8 index) public checkOwnerAndAccept {
        taskmap[index].indicator = true;
	}

}
